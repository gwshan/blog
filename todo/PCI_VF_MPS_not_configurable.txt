
                     ===============================
                     PCI VF's MPS isn't configurable
                     ===============================

Created:  15/11/2016
Updated:  16/11/2016
Status:   WORKING
Reporter: Carol L Soto <clsoto@us.ibm.com>

===== 16/11/2016 =========================================================

Patches were pushed for Carol to test. It's verified on p83 with simple
testing:

    http://github.com/gwshan/skiboot (branch: feature/iov)

# lspci -s 0004:01:00.
0004:01:00.0 Ethernet controller: Mellanox Technologies MT27500 Family [ConnectX-3]
0004:01:00.1 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
0004:01:00.2 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
0004:01:00.3 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
# lspci -vvs 0004:01:00.0 | grep MaxPayload
		DevCap:	MaxPayload 256 bytes, PhantFunc 0, Latency L0s <64ns, L1 unlimited
			MaxPayload 256 bytes, MaxReadReq 512 bytes
# lspci -vvs 0004:01:00.1 | grep MaxPayload
		DevCap:	MaxPayload 256 bytes, PhantFunc 0, Latency L0s <64ns, L1 <1us
			MaxPayload 256 bytes, MaxReadReq 128 bytes

XXXXX: More details about the patches will be provided later.

===== 15/11/2016 =========================================================

The VF's MPS is configured in HEADER quirk as below function calls indicate.
The VF's MPS is set through PCI_EXP_DEVCTL register, but it's readonly. User
always gets 128 bytes as its MPS even it has been configured with 512 bytes.
It's confusing, we need one mechanism in skiboot to emulate this bits to
eleminate the confusion.

   pci_enable_sriov
   sriov_enable
   pci_iov_add_virtfn
      pci_setup_device
      pci_fixup_device(EARLY)
   pci_device_add
   pci_fixup_device(HEADER)
   pnv_pci_fixup_vf_mps
